:root
{
  --treeview-background-color: var(--remotion-themed-background-color-page);
}

ul.treeViewRoot
{
  --treeview-chevron-size: var(--remotion-themed-img-width);
  --treeview-chevron-gap: var(--remotion-themed-spacing);
  --treeview-padding: calc(var(--treeview-chevron-size) + var(--treeview-chevron-gap));
  --treeview-node-padding-vertical: calc(var(--remotion-themed-spacing-small) / 2);
  --treeview-category-separator: var(--remotion-themed-border-width) solid var(--color-standard-separator);

  margin: 0;
  min-width: 100%;
  width: min-content;
  min-height: 100%;
  height: min-content;
  box-sizing: border-box;
  color: var(--color-standard-text);
  background-color: var(--treeview-background-color);
}

ul.treeViewRoot.whitespaceNoWrap span.treeViewNode
{
  white-space: nowrap;
}

ul.treeViewRoot a,
ul.treeViewRoot a:focus
{
  color: var(--color-standard-text);
  text-decoration: none;
}

ul.treeViewRoot span.treeViewNode
{
  position: relative;
}

ul.treeViewRoot,
ul.treeViewRoot ul.treeViewNodeChildren,
ul.treeViewRoot ul.treeViewNodeChildrenNoLines,
ul.treeViewRoot ul.treeViewTopLevelNodeChildren
{
  margin: 0;
  padding: 0;
  list-style: none;
}

ul.treeViewRoot span.treeViewNodeHeadSelected a:focus,
ul.treeViewRoot a[role=treeitem]
{
  outline: none;
}

ul.treeViewRoot li > span.treeViewNode
{
  box-sizing: border-box;
  border: var(--remotion-themed-border-placeholder);
  border-radius: var(--remotion-themed-border-radius);
}

ul.treeViewRoot span.treeViewNode:has(a[aria-selected=true])
{
  background-color: var(--color-highlight);
  border-color: var(--color-highlight);
}

ul.treeViewRoot span.treeViewNode:hover
{
  background-color: var(--remotion-themed-background-color-hover);
  border: var(--remotion-themed-border-hover);
  box-shadow: var(--remotion-themed-box-shadow-hover);
}

ul.treeViewRoot span.treeViewNode:has(a:focus)
{
  outline: var(--remotion-themed-outline-focus);
  outline-offset: var(--remotion-themed-outline-offset-focus);
  background-color: var(--remotion-themed-background-color-focus);
  border: var(--remotion-themed-border-focus);
  box-shadow: var(--remotion-themed-box-shadow-focus);
}

ul.treeViewRoot span.treeViewNode:hover:has(a:focus)
{
  outline: var(--remotion-themed-outline-focus-hover);
  outline-offset: var(--remotion-themed-outline-offset-focus-hover);
  background-color: var(--remotion-themed-background-color-focus-hover);
  border: var(--remotion-themed-border-focus-hover);
  box-shadow: var(--remotion-themed-box-shadow-focus-hover);
}

ul.treeViewRoot span.treeViewNode:has(a[aria-selected=true]:focus)
{
  outline: var(--remotion-themed-outline-focus);
  outline-offset: var(--remotion-themed-outline-offset-focus);
  background-color: var(--color-highlight);
  border: var(--remotion-themed-border-focus);
  box-shadow: var(--remotion-themed-box-shadow-focus);
}

ul.treeViewRoot span.treeViewNode:hover:has(a[aria-selected=true]:focus)
{
  outline: var(--remotion-themed-outline-focus-hover);
  outline-offset: var(--remotion-themed-outline-offset-focus-hover);
  background-color: var(--color-highlight);
  border: var(--remotion-themed-border-focus-hover);
  box-shadow: var(--remotion-themed-box-shadow-focus-hover);
}

ul.treeViewRoot span.treeViewNodeHead,
ul.treeViewRoot span.treeViewNodeHeadSelected
{
  flex-grow: 1;
}

ul.treeViewRoot span.treeViewNode,
ul.treeViewRoot span.treeViewNodeHead > a,
ul.treeViewRoot span.treeViewNodeHeadSelected > a
{
  display: flex;
  align-items: center;
  padding-top: var(--treeview-node-padding-vertical);
  padding-bottom: var(--treeview-node-padding-vertical);
  cursor: pointer;
}

ul.treeViewRoot span.treeViewNode > a
{
  align-self: center;
}

ul.treeViewRoot span.treeViewNodeHead > a > img.Icon,
ul.treeViewRoot span.treeViewNodeHeadSelected > a > img.Icon
{
  align-self: start;
}

ul.treeViewRoot span.treeViewNode > a img.Icon
{
  height: var(--treeview-chevron-size);
  width: var(--treeview-chevron-size);
  margin-right: var(--treeview-chevron-gap);
  vertical-align: top;
}

ul.treeViewRoot span.treeViewNode
{
  /* defined inline on the markup */
  --nesting-depth: var(--nesting-depth, 0);
}

ul.treeViewRoot span.treeViewNode
{
  padding-left: calc(var(--treeview-padding) * var(--nesting-depth) + var(--remotion-themed-spacing-small));
  padding-right: var(--remotion-themed-spacing-small);
}

ul.treeViewRoot ul.treeViewTopLevelNodeChildren span.treeViewNode
{
  padding-left: calc(var(--treeview-padding) * (var(--nesting-depth) - 1) + var(--remotion-themed-spacing-small));
}

ul.treeViewRoot span.treeViewNode span.treeViewNodeBadge
{
  position: sticky;
  right: 0;
  background-color: var(--treeview-background-color);
  margin-left: auto;
  padding: var(--treeview-node-padding-vertical) var(--remotion-themed-spacing-small) 0 var(--remotion-themed-spacing);
  font: var(--remotion-themed-font-bold);
  user-select: none;
  align-self: start;
}

/* We need to match very closely when drawing the shadow, otherwise we run the risk of having random shadows appear:
    * Matches the relationship between the focused <li> and its first child <li>: */
ul.treeViewRoot li:has(> span.treeViewNode a:focus) > ul > li:first-of-type > span.treeViewNode:not(:hover) span.treeViewNodeBadge,
/*  * Matches the relationship between the focused <li> and its first sibling <li>: */
ul.treeViewRoot li:has(> span.treeViewNode a:focus) + li:first-of-type > span.treeViewNode:not(:hover) span.treeViewNodeBadge
{
  /* Simulate continued box-shadow from previous element due to the badge-element hiding the shadow-effect. */
  --rounding-value: 0.5px;
  /* box-shadow based on --remotion-themed-box-shadow-focus */
  box-shadow: inset 0 calc(1px + var(--treeview-node-padding-vertical) + var(--rounding-value)) 5px -5px rgba(0, 0, 0, 0.3);
}

ul.treeViewRoot span.treeViewNode:has(a[aria-selected=true]) span.treeViewNodeBadge,
ul.treeViewRoot span.treeViewNode:has(a[aria-selected=true]:focus) span.treeViewNodeBadge
{
  background-color: var(--color-highlight);
}

ul.treeViewRoot span.treeViewNode:hover span.treeViewNodeBadge
{
  background-color: var(--remotion-themed-background-color-hover);
}

ul.treeViewRoot span.treeViewNode:has(a:focus) span.treeViewNodeBadge
{
  background-color: var(--remotion-themed-background-color-focus);
}

ul.treeViewRoot span.treeViewNode:hover:has(a:focus) span.treeViewNodeBadge
{
  background-color: var(--remotion-themed-background-color-focus-hover);
}

li.treeViewNodeCategorySeparator
{
  margin-bottom: var(--remotion-themed-spacing);
  padding-bottom: var(--remotion-themed-spacing);
  border-bottom: var(--treeview-category-separator);
  box-sizing: border-box;
}

