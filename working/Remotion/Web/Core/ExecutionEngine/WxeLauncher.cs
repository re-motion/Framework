// This file is part of the re-motion Core Framework (www.re-motion.org)
// Copyright (c) rubicon IT GmbH, www.rubicon.eu
// 
// The re-motion Core Framework is free software; you can redistribute it 
// and/or modify it under the terms of the GNU Lesser General Public License 
// as published by the Free Software Foundation; either version 2.1 of the 
// License, or (at your option) any later version.
// 
// re-motion is distributed in the hope that it will be useful, 
// but WITHOUT ANY WARRANTY; without even the implied warranty of 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with re-motion; if not, see http://www.gnu.org/licenses.
// 
using System;
using System.Collections.Specialized;
using System.Text;
using System.Web;

namespace Remotion.Web.ExecutionEngine
{

/// <summary> Redirects the request to the <b>WxeHandler.ashx</b> HTTP handler. </summary>
/// <remarks> 
///   <para>
///     This redirection is required to allow a WXE-URL to be opened from Microsoft Word. MS Word seems to
///     start the request and then transfer the execution to Internet Explorer. This results in the loss of the 
///     session cookie, preventing the WXE from responding to further postbacks from this session.
///   </para><para>
///     MS Word also seems to have problems with Error 302 and the related redirection specified in the response 
///     header's <b>location</b> field. The redirection must therefor be performed using an HTML head meta tag.
///   </para>
/// </remarks>
public class WxeLauncher: IHttpHandler
{
  /// <summary> Gets the query string to be passed to the <see cref="WxeHandler"/>. </summary>
  /// <param name="queryString"> The original query string. </param>
  /// <returns> The query string to pass on the <see cref="WxeHandler"/>. </returns>
  /// <remarks> Override this method to change the query string. </remarks>
  protected virtual string GetQueryString (NameValueCollection queryString)
  {
    return queryString.ToString();
  }

  /// <summary> Gets the name of the wxe handler. </summary>
  /// <value> A string with the wxe handler's filename. Defaults to <c>WxeHandler.ashx</c>. </value>
  protected virtual string WxeHandler
  {
    get { return "WxeHandler.ashx"; }
  }

  /// <summary> 
  ///   Redirects the request to the <see cref="WxeHandler"/>, passing the query string generated by 
  ///   <see cref="GetQueryString"/>.
  /// </summary>
  public void ProcessRequest (HttpContext context)
  {
    StringBuilder destinationUrlBuilder = new StringBuilder (100);
    destinationUrlBuilder.Append (context.Request.ApplicationPath);
    destinationUrlBuilder.Append ("/");
    destinationUrlBuilder.Append (WxeHandler);
    destinationUrlBuilder.Append ("?");
    destinationUrlBuilder.Append (GetQueryString (context.Request.QueryString));

    string destinationUrl = destinationUrlBuilder.ToString();

    //  MS Word does not understand Error 302.
    //  A redirect via meta tag is therefor required.

    context.Response.Clear();

		context.Response.Write ("<html>\r\n");
    context.Response.Write ("<head>\r\n");
    context.Response.Write ("<title>Object moved</title>\r\n");
    context.Response.Write ("<meta http-equiv=\"refresh\" content=\"0; URL=" + destinationUrl + "\">");
    context.Response.Write ("</head>\r\n");
    context.Response.Write ("<body>\r\n");
		context.Response.Write ("<h2>Object moved to <a href='" + destinationUrl + "'>here</a>.</h2>\r\n");
    context.Response.Write ("</body>\r\n");
		context.Response.Write ("</html>\r\n");

    context.Response.End ();
  }

  bool IHttpHandler.IsReusable
  {
    get { return false; }
  }
}

}
