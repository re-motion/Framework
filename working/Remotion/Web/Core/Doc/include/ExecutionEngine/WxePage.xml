<?xml version="1.0" encoding="UTF-8" ?>
<!-- This file is part of the re-motion Core Framework (www.re-motion.org)
 ! Copyright (c) rubicon IT GmbH, www.rubicon.eu
 ! 
 ! The re-motion Core Framework is free software; you can redistribute it 
 ! and/or modify it under the terms of the GNU Lesser General Public License 
 ! as published by the Free Software Foundation; either version 2.1 of the 
 ! License, or (at your option) any later version.
 ! 
 ! re-motion is distributed in the hope that it will be useful, 
 ! but WITHOUT ANY WARRANTY; without even the implied warranty of 
 ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 ! GNU Lesser General Public License for more details.
 ! 
 ! You should have received a copy of the GNU Lesser General Public License
 ! along with re-motion; if not, see http://www.gnu.org/licenses.
-->
<WxePage>
  <Class>
    <remarks>

      <h4 class="dtH4">Standards Conformance</h4>
      <list type="table">
        <listheader>
          <term>Standard</term>
          <description>Conformance Information</description>
        </listheader>
        <item>
          <term>HTML 4.01</term>
          <description>valid</description>
        </item>
        <item>
          <term>XHTML 1.0</term>
          <description>valid</description>
        </item>
        <item>
          <term>WAI WCAG 1.0</term>
          <description>
            Priority 1 checkpoint 6.3 is not met by calls to <see cref="Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal"/> since the 
            <see cref="WxePage"/> uses javascript to open the new window. This is currently <b>not</b> 
            enforced or validated by setting the <see cref="Remotion.Web.Configuration.WebConfiguration.Wcag"/> 
            configuration entry.
          </description>
        </item>        
      </list>

      <h4 class="dtH4">Session Management</h4>
      <para>
        The execution engine provides features for keeping the session alive and for aborting the function stack when 
        it is no longer needed.
      </para><para>
        Session management must be enabled by setting the 
        <see cref="Remotion.Web.Configuration.ExecutionEngineConfiguration.EnableSessionManagement">ExecutionEngineConfiguration.EnableSessionManagement</see>
        flag in the configuration file (and is so by default). The session aborting part of session management can 
        be disabled for each <see cref="WxePage"/> as needed.
      </para><para>
        If aborting is enabled on a <see cref="WxePage"/> (<see cref="EnableAbort"/> and the client supports 
        scripting, the function stack will be aborted if the user leaves the page via hyperlink, by refreshing the 
        page, by navigating the history, or by closing the window. The user will be presented with a confirmation 
        message before actually aborting the function stack if the 
        <see cref="Remotion.Web.UI.SmartPage.ShowAbortConfirmation"/> property is set to 
        <see cref="F:Remotion.Web.UI.ShowAbortConfirmation.Always"/> or 
        <see cref="F:Remotion.Web.UI.ShowAbortConfirmation.OnlyIfDirty"/> (and the page is dirty).
        <note>
          The confirmation message is only available on Internet Explorer 5.0.1 and later and Mozilla/Firefox 1.0 
          and later.
        </note>
      <para></para>
        The session keep alive feature ensures that the function stack and the session will remain valid for as
        long as the client dislays a <see cref="WxePage"/> that is part of the function stack.
      </para><para>
        The session management feature use out-of-band communication (XMLHTTP requests or DHTML hidden requests if 
        no XMLHTTP is available) to transmit refresh or abort requests to the server. The "Run ActiveX controls and 
        plugins" and "Script ActiveX controls marked save for scripting" settings must be enabled in Internet 
        Explorer 6 and earlier in order to use XMLHTTP requests. If ActiveX is disallowed, a DHTML hidden request 
        is generated instead. It is recommended to enable the ActiveX settings in an Intranet environment because 
        the XMLHTTP method is more reliable than the DHTML hidden request.
      </para>
      <note>
        For Internet applications the user might have disabled client scripting and the session timeout setting 
        should reflect the possiblity that no refresh requests are transmitted.
      </note>
      
      <h4 class="dtH4">Page State Management</h4>
      <para>
        The <see cref="WxePage"/> generates client script code that will detect (and prevent) a user's attempt to 
        resubmit a page. In case that the client does support scripting, the <see cref="WxePage"/> is able to identify
        a resubmit and  will throw a <see cref="WxePostbackOutOfSequenceException"/>. 
      <para></para>  
        Such resubmits can occur, for instance, if the server's response time is higher than the user's patience, 
        resulting in the user clicking another button on the page. It is also possible that the user navigates 
        backwards through the browser's history. In such an event the user might also try to resubmit a page or, 
        with enabled session management, try to submit to an already aborted function.
      </para><para>
        In case of the user navigating through the history, he will be presented with the message defined by the 
        <see cref="StatusIsCachedMessage"/> property. You should set this property with a message, containing a
        hyperlink to the start page or a hyperlink that can be used to initialize the current function.
      </para><para>
        Due to implementation details of the browers, it is not possible to prevent the user from reloading the
        page from the cache, e.g. by hitting the refresh button (F5 in MS Internet Explorer). If session aborting 
        is enabled, the user will be presented with the option to cancel the refresh. If he does not do so, the 
        function will be aborted and the user will receive an exception on the next submit. It is the application 
        developer's responsibilty to provide a custom error message. This message should contain a hyperlink to the 
        start page or a hyperlink that can be used to initialize the function.
      </para><para>
        It is possible to disable the page state management by setting the <see cref="EnableOutOfSequencePostBacks"/>
        property to <see langword="true"/> and <see cref="EnableAbort"/> to 
        <see langword="false"/>. In doing so, the application developer takes responsibility of handling
        resubmits to a page in a meaningful manner. If the execution engine detects an out-of-sequence postback, it 
        will set the <see cref="IsOutOfSequencePostBack"/> flag on the page.
      </para>
      <note type="caution">
        Disabling page state management will likely affect the way user input is handled. For instance, it is possible 
        that controls of type <see cref="T:Remotion.ObjectBinding.Web.UI.IBusinessObjectBoundEditableWebControl" /> do not
        register as dirty when saving the values. To resolve this issue, the control's
        <see cref="P:Remotion.ObjectBinding.Web.UI.IBusinessObjectBoundEditableWebControl.IsDirty" /> flag must be set explictly before calling
        <see cref="M:Remotion.ObjectBinding.Web.UI.IBusinessObjectBoundEditableWebControl.SaveValue" />
      </note>

      <h4 class="dtH4">General Usage Notes</h4>
      <para>
        The <b>WxePage</b> also provides access to the <see cref="CurrentPageStep"/>, the <see cref="CurrentFunction"/>
        and the <see cref="Variables"/> collection.
      </para>
      <note type="inheritinfo">
        In case you cannot derive from <b>WxePage</b>, see the <see cref="IWxePage"/>'s documentation for details on 
        how to implent the <see cref="IWxePage"/> interface on page.
      </note>

      <h4 class="dtH4">Localization Support</h4>
      <para>
        The resources required by the <see cref="WxePage"/> are defined by the 
        <see cref="WxePageInfo.ResourceIdentifier"/> enum. See the <b>ResourceIdentifier</b>'s documentation for 
        details on localization.
      </para><para>
        The <see cref="WxePage"/> supports resource dispatching to its properties through the 
        <see cref="Remotion.Web.UI.Globalization.ResourceDispatcher"/>.
        Use the following resource identifiers for dispatching strings to the <see cref="WxePage"/>
        or use the <b>global resource identifier</b> syntax for setting the resource identifier in the propery.
      </para>
      <list type="table">
        <listheader>
          <term>Property</term>
          <description>Resource Identifier</description>
        </listheader>
        <item>
          <term> <see cref="StatusIsAbortingMessage"/> </term>
          <description>
            <para> &lt;WxePage Resource ID&gt;:StatusIsAbortingMessage </para>
            <para> e.g. auto:this:StatusIsAbortingMessage </para>
          </description>
        </item>
        <item>
          <term> <see cref="StatusIsCachedMessage"/> </term>
          <description>
            <para> &lt;WxePage Resource ID&gt;:StatusIsCachedMessage </para>
            <para> e.g. auto:this:StatusIsCachedMessage </para>
          </description>
        </item>
      </list>
      
    </remarks>
    <seealso cref="IWxePage"/>
    <seealso cref="SmartPage"/>
    <seealso cref="WxePageInfo"/>
    <seealso cref="WxePageStep"/>
  </Class>
  <GetPermanentUrl>
    <param name="functionType"> 
      The type of the <see cref="WxeFunction"/> for which to create the permanent URL. 
      Must be derived from <see cref="WxeFunction"/>. 
    </param>
    <param name="queryString">
      The <see cref="StringDictionary"/> containing the query string arguments. Must not be <see langword="null"/>. 
    </param>
  </GetPermanentUrl>
</WxePage>
