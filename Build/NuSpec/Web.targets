<?xml version="1.0" encoding="utf-8" ?> 
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <ItemGroup>
    <RemotionWebResource_Package Include="$(MSBuildThisFileName)">
      <PackageResFolder>$([System.IO.Path]::GetFullPath( $(MSBuildThisFileDirectory)..\res ))</PackageResFolder>
      <ProjectResFolder>$(MSBuildProjectDirectory)\res\$(MSBuildThisFileName)</ProjectResFolder>
    </RemotionWebResource_Package>
  </ItemGroup>

  <PropertyGroup>
    <!-- Old .NET Framwork ASP.NET projects are detected using the project type guid -->
    <WebApplicationProjectTypeGuid>{349c5851-65df-11da-9384-00065b846f21}</WebApplicationProjectTypeGuid>
    <_isNetFramworkWebApplicationProject>$(ProjectTypeGuids.ToLower().Contains($(WebApplicationProjectTypeGuid)))</_isNetFramworkWebApplicationProject>
    <!-- .Contains returns 'True'/'False' so we need to normalize to lowercase here -->
    <_isNetFramworkWebApplicationProject>$(_isNetFramworkWebApplicationProject.ToLower())</_isNetFramworkWebApplicationProject>
    <!-- 'UsingMicrosoftNETSdkWeb' is set in the Sdk.props of the 'Microsoft.NET.Sdk.Web' SDK (all the ASP.NET Core projects) -->
    <_isAspNetCoreWebApplicationProject>$(UsingMicrosoftNETSdkWeb)</_isAspNetCoreWebApplicationProject>
    <_isWebApplicationProject>false</_isWebApplicationProject>
    <_isWebApplicationProject Condition="'$(_isNetFramworkWebApplicationProject)' == 'true' OR '$(_isAspNetCoreWebApplicationProject)' == 'true'">true</_isWebApplicationProject>
    <!-- Determine if we use symlinks (old) or contentFiles (new). For .NET Framework ASP.NET projects we choose symlinks, otherwise we use contentFiles. -->
    <_useSymlink>false</_useSymlink>
    <_useSymlink Condition="'$(_isNetFramworkWebApplicationProject)' == 'true'">true</_useSymlink>
  </PropertyGroup>

  <PropertyGroup>
    <RemotionWebResource_IsWebApplication Condition="'$(RemotionWebResource_IsWebApplication)' == ''">$(_isWebApplicationProject)</RemotionWebResource_IsWebApplication>
    <RemotionWebResource_TargetPath Condition="'$(RemotionWebResource_TargetPath)' == ''">res</RemotionWebResource_TargetPath>
  </PropertyGroup>

  <ItemGroup Condition="'$(RemotionWebResource_IsWebApplication)' == 'true' AND '$(_useSymlink)' == 'false'">
    <Content Include="$(MSBuildThisFileDirectory)..\res\**\*" CopyToOutputDirectory="PreserveNewest" Visible="true" Link="$(RemotionWebResource_TargetPath)\$(MSBuildThisFileName)\%(RecursiveDir)%(Filename)%(Extension)" Pack="false" />
  </ItemGroup>

  <Target Name="RemotionWebResource_DeleteResFolder" Condition="'$(RemotionWebResource_IsWebApplication)' == 'true' AND '$(_useSymlink)' == 'true'">
    <RemoveDir Directories="%(RemotionWebResource_Package.ProjectResFolder)"/>
  </Target>

  <Target Name="RemotionWebResource_CreateResFolder" DependsOnTargets="RemotionWebResource_DeleteResFolder" 
          Condition="'$(RemotionWebResource_IsWebApplication)' == 'true' AND '$(_useSymlink)' == 'true'">
    <PropertyGroup>
      <_resFolder>$(MSBuildProjectDirectory)\res</_resFolder>
    </PropertyGroup>

    <MakeDir Directories="$(_resFolder)" />
    <Exec Command="mklink /D /J &quot;%(RemotionWebResource_Package.ProjectResFolder)&quot; &quot;%(RemotionWebResource_Package.PackageResFolder)&quot;"
          Condition="Exists (%(RemotionWebResource_Package.PackageResFolder))"
          StandardOutputImportance="Low" />
  </Target>

  <Target Name="RemotionWebResource_AfterClean" AfterTargets="AfterClean" DependsOnTargets="RemotionWebResource_DeleteResFolder"/>
  <Target Name="RemotionWebResource_AfterBuild" AfterTargets="AfterBuild" DependsOnTargets="RemotionWebResource_CreateResFolder"/>

</Project>