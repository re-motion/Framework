<?xml version="1.0" encoding="UTF-8" ?>
<!-- This file is part of the re-motion Core Framework (www.re-motion.org)
 ! Copyright (c) rubicon IT GmbH, www.rubicon.eu
 ! 
 ! The re-motion Core Framework is free software; you can redistribute it 
 ! and/or modify it under the terms of the GNU Lesser General Public License 
 ! as published by the Free Software Foundation; either version 2.1 of the 
 ! License, or (at your option) any later version.
 ! 
 ! re-motion is distributed in the hope that it will be useful, 
 ! but WITHOUT ANY WARRANTY; without even the implied warranty of 
 ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 ! GNU Lesser General Public License for more details.
 ! 
 ! You should have received a copy of the GNU Lesser General Public License
 ! along with re-motion; if not, see http://www.gnu.org/licenses.
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="Remotion.Projects.include.build" />

  <PropertyGroup>
    <Version></Version>
    <ReleaseType></ReleaseType>

    <SolutionDirectory>$(MSBuildProjectDirectory)\..\</SolutionDirectory>
    <OutputDirectory>$(MSBuildProjectDirectory)\BuildOutput\</OutputDirectory>
    <LogDirectory>$(OutputDirectory)log\</LogDirectory>
    <TempDirectory>$(MSBuildProjectDirectory)\BuildOutput\temp\</TempDirectory>
    <ArchiveDirectory>$(MSBuildProjectDirectory)\BuildOutput\Archive\</ArchiveDirectory>

    <SolutionKeyFile>$(SolutionDirectory)remotion.snk</SolutionKeyFile>

    <VcsUrlTemplate></VcsUrlTemplate>
    <DependDBProjectBranch></DependDBProjectBranch>
    <DependDBProjectVersion></DependDBProjectVersion>
    <DependDBProjectImportNotificationMailAddress></DependDBProjectImportNotificationMailAddress>
    <DependDBProjectImportNotificationMailAddressCc></DependDBProjectImportNotificationMailAddressCc>
    <DependDBUploadPath>$(MSBuildProjectDirectory)\BuildOutput\DependDB\</DependDBUploadPath>
  </PropertyGroup>

  <PropertyGroup>
    <ToolsPath>$(SolutionDirectory)prereq\Tools\</ToolsPath>
    <PackagesDirectory Condition="'$(PackagesDirectory)' == ''">$(MSBuildProjectDirectory)\..\packages\</PackagesDirectory>
  </PropertyGroup>

  <Target Name="CleanProjects">
    <ItemGroup>
      <_configurations Remove="@(_configurations)" />
      <_configurations Include="Release"/>
      <_configurations Include="Debug"/>
    </ItemGroup>
    <MSBuild Projects="$(SolutionDirectory)Remotion.sln" Targets="Clean" Properties="Configuration=%(_configurations.Identity)" />
  </Target>

  <Target Name="CleanFolders">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />
    <Error Text="The property 'LogDirectory' is not set." Condition="'$(LogDirectory)' == ''" />
    <Error Text="The property 'TempDirectory' is not set." Condition="'$(TempDirectory)' == ''" />
    
    <Exec Command="rmdir /Q /S &quot;$(LogDirectory)&quot;" Condition="Exists ($(LogDirectory))" />
    <Exec Command="rmdir /Q /S &quot;$(TempDirectory)&quot;" Condition="Exists ($(TempDirectory))" />
    <Exec Command="rmdir /Q /S &quot;$(OutputDirectory)&quot;" Condition="Exists ($(OutputDirectory))" />
  </Target>

  <Target Name="PrepareBuildProperties">
    <PropertyGroup>
      <BuildProperties>
          PackagesDirectory=$(PackagesDirectory);
          SolutionDirectory=$(SolutionDirectory);
          OutputDirectory=$(OutputDirectory);
          Version=$(Version);
          NuGetVersionSuffix=$(NuGetVersionSuffix);
          ReleaseType=$(ReleaseType);
          VcsUrlTemplate=$(VcsUrlTemplate);
          SvnRevision=$(SvnRevision);
          ChromeVersionArchive=$(ChromeVersionArchive);
          DatabaseNamePrefix=$(DatabaseNamePrefix);
          DataSourceMsSql2005=$(DataSourceMsSql2005);
          DataSourceMsSql2008=$(DataSourceMsSql2008);
          DataSourceMsSql2008R2=$(DataSourceMsSql2008R2);
          DataSourceMsSql2012=$(DataSourceMsSql2012);
          DataSourceMsSql2014=$(DataSourceMsSql2014);
          DataSourceMsSql2016=$(DataSourceMsSql2016);
          DatabaseDirectoryMsSql2005=$(DatabaseDirectoryMsSql2005);
          DatabaseDirectoryMsSql2008=$(DatabaseDirectoryMsSql2008);
          DatabaseDirectoryMsSql2008R2=$(DatabaseDirectoryMsSql2008R2);
          DatabaseDirectoryMsSql2012=$(DatabaseDirectoryMsSql2012);
          DatabaseDirectoryMsSql2014=$(DatabaseDirectoryMsSql2014);
          DatabaseDirectoryMsSql2016=$(DatabaseDirectoryMsSql2016);
          IntegratedSecurityMsSql2005=$(IntegratedSecurityMsSql2005);
          IntegratedSecurityMsSql2008=$(IntegratedSecurityMsSql2008);
          IntegratedSecurityMsSql2008R2=$(IntegratedSecurityMsSql2008R2);
          IntegratedSecurityMsSql2012=$(IntegratedSecurityMsSql2012);
          IntegratedSecurityMsSql2014=$(IntegratedSecurityMsSql2014);
          IntegratedSecurityMsSql2016=$(IntegratedSecurityMsSql2016);
          UsernameMsSql2005=$(UsernameMsSql2005);
          UsernameMsSql2008=$(UsernameMsSql2008);
          UsernameMsSql2008R2=$(UsernameMsSql2008R2);
          UsernameMsSql2012=$(UsernameMsSql2012);
          UsernameMsSql2014=$(UsernameMsSql2014);
          UsernameMsSql2016=$(UsernameMsSql2016);
          PasswordMsSql2005=$(PasswordMsSql2005);
          PasswordMsSql2008=$(PasswordMsSql2008);
          PasswordMsSql2008R2=$(PasswordMsSql2008R2);
          PasswordMsSql2012=$(PasswordMsSql2012);
          PasswordMsSql2014=$(PasswordMsSql2014);
          PasswordMsSql2016=$(PasswordMsSql2016);
      </BuildProperties>
    </PropertyGroup>

    <Message Text="Configured build properties for global build script: $(BuildProperties)" />
  </Target>

  <Target Name="PrepareVersionForMasterScript">
    <Error Text="The build target 'PrepareVersionForMasterScript' must be defined by the calling build file." />
  </Target>

  <Target Name="RevertModifiedFiles">
    <Message Text="Deleting files created during build." Importance="High"/>

    <ItemGroup>
      <_modifiedFiles Remove="@(_modifiedFiles)"/>
      <_createdFiles Remove="@(_createdFiles)"/>
      
      <_modifiedFilesList Remove="@(_modifiedFilesList)"/>
      <_modifiedFilesList Include="$(TempDirectory)*/ModifiedFiles.txt"/>
      
      <_createdFilesList Remove="@(_createdFilesList)"/>
      <_createdFilesList Include="$(TempDirectory)*/CreatedFiles.txt"/>
    </ItemGroup>

    <ReadLinesFromFile File="%(_modifiedFilesList.Identity)" Condition="'@(_modifiedFilesList)' != ''">
      <Output TaskParameter="Lines" ItemName="_modifiedFiles"/>
    </ReadLinesFromFile>

    <PropertyGroup>
      <_pattern><![CDATA[^(?<original>[^\|]+)\|(?<backup2>[^\|]+)\|(?<backup>[^\|]+)$]]></_pattern>
      <_originalReplacementPattern>${original}</_originalReplacementPattern>
      <_backup2ReplacementPattern>${backup2}</_backup2ReplacementPattern>
      <_backupReplacementPattern>${backup}</_backupReplacementPattern>
    </PropertyGroup>

    <ItemGroup>
      <_modifiedFiles>
        <Original>$( [System.Text.RegularExpressions.Regex]::Replace ( %(Identity), $(_pattern), $(_originalReplacementPattern) ) )</Original>
        <Backup2>$( [System.Text.RegularExpressions.Regex]::Replace ( %(Identity), $(_pattern), $(_backup2ReplacementPattern) ) )</Backup2>
        <Backup>$( [System.Text.RegularExpressions.Regex]::Replace ( %(Identity), $(_pattern), $(_backupReplacementPattern) ) )</Backup>
      </_modifiedFiles>
    </ItemGroup>

    <Move SourceFiles="%(_modifiedFiles.Backup2)" DestinationFiles="%(_modifiedFiles.Original)" />
    <Delete Files="%(_modifiedFiles.Backup)" />

    <ReadLinesFromFile File="%(_createdFilesList.Identity)" Condition="'@(_createdFilesList)' != ''">
      <Output TaskParameter="Lines" ItemName="_createdFiles"/>
    </ReadLinesFromFile>

    <Delete Files="@(_createdFiles)" />

    <Message Text="Done deleting files created during build." Importance="High"/>
  </Target>

</Project>